{"ast":null,"code":"var _jsxFileName = \"/home/d4rx/Desktop/ServerManager/web/src/pages/Home.js\",\n  _s = $RefreshSig$();\n// // web/src/pages/Home.js\n// import React from 'react';\n// import GameCard from '../components/GameCard';\n\n// const Home = () => {\n//     return (      \n\n//         <div>\n\n//             <h1>Bienvenido al Gestor de Servidores</h1>\n//             <p>Administra tus servidores de juegos desde una interfaz web.</p>\n//             <p>Selecciona un juego en el menú para comenzar.</p>\n\n//             <GameCard title=\"Minecraft\" description=\"Manage your Minecraft server\" link=\"/minecraft\" />\n//             <GameCard title=\"Project Zomboid\" description=\"Manage your Project Zomboid server\" link=\"/project-zomboid\" />\n//             <GameCard title=\"Assetto Corsa\" description=\"Manage your Assetto Corsa server\" link=\"/assetto-corsa\" />\n//         </div>\n//     );\n// };\n\n// export default Home;\n\n// web/src/pages/Home.js\nimport React, { useState, useEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport './styles.css'; // Asegúrate de importar el archivo CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Title, Tooltip, Legend, ArcElement);\nconst Home = () => {\n  _s();\n  const [stats, setStats] = useState({\n    cpuUsage: '0',\n    memoryUsage: '0'\n  });\n  useEffect(() => {\n    // Función para obtener las estadísticas del sistema\n    const fetchSystemStats = async () => {\n      try {\n        const response = await fetch('/api/system/stats');\n        const data = await response.json();\n        setStats(data);\n      } catch (error) {\n        console.error('Error fetching system stats:', error);\n      }\n    };\n    fetchSystemStats();\n    // Actualizar cada 10 segundos\n    const interval = setInterval(fetchSystemStats, 1000);\n    return () => clearInterval(interval); // Limpiar intervalo al desmontar\n  }, []);\n\n  // Datos para la gráfica de uso de RAM\n  const memoryUsageData = {\n    labels: ['Uso de RAM', 'Libre'],\n    datasets: [{\n      data: [stats.memoryUsage, 100 - stats.memoryUsage],\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(200, 200, 200, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(200, 200, 200, 1)'],\n      borderWidth: 1\n    }]\n  };\n\n  // Datos para la gráfica de uso de CPU\n  const cpuUsageData = {\n    labels: ['Uso de CPU', 'Libre'],\n    datasets: [{\n      data: [stats.cpuUsage, 100 - stats.cpuUsage],\n      backgroundColor: ['rgba(75, 192, 192, 0.2)', 'rgba(200, 200, 200, 0.2)'],\n      borderColor: ['rgba(75, 192, 192, 1)', 'rgba(200, 200, 200, 1)'],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bienvenido al Gestor de Servidores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Administra tus servidores de juegos desde una interfaz web.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Selecciona un juego en el men\\xFA para comenzar.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Estad\\xEDsticas del Sistema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Uso de RAM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: memoryUsageData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Uso de CPU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: cpuUsageData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"RTuVN8qZCT3xcR2MkvmjjCRe3rw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Doughnut","Chart","ChartJS","Title","Tooltip","Legend","ArcElement","jsxDEV","_jsxDEV","register","Home","_s","stats","setStats","cpuUsage","memoryUsage","fetchSystemStats","response","fetch","data","json","error","console","interval","setInterval","clearInterval","memoryUsageData","labels","datasets","backgroundColor","borderColor","borderWidth","cpuUsageData","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/d4rx/Desktop/ServerManager/web/src/pages/Home.js"],"sourcesContent":["// // web/src/pages/Home.js\n// import React from 'react';\n// import GameCard from '../components/GameCard';\n\n// const Home = () => {\n//     return (      \n\n//         <div>\n\n//             <h1>Bienvenido al Gestor de Servidores</h1>\n//             <p>Administra tus servidores de juegos desde una interfaz web.</p>\n//             <p>Selecciona un juego en el menú para comenzar.</p>\n\n//             <GameCard title=\"Minecraft\" description=\"Manage your Minecraft server\" link=\"/minecraft\" />\n//             <GameCard title=\"Project Zomboid\" description=\"Manage your Project Zomboid server\" link=\"/project-zomboid\" />\n//             <GameCard title=\"Assetto Corsa\" description=\"Manage your Assetto Corsa server\" link=\"/assetto-corsa\" />\n//         </div>\n//     );\n// };\n\n// export default Home;\n\n\n\n// web/src/pages/Home.js\nimport React, { useState, useEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, Title, Tooltip, Legend, ArcElement } from 'chart.js';\n\nimport './styles.css'; // Asegúrate de importar el archivo CSS\n\n\nChartJS.register(Title, Tooltip, Legend, ArcElement);\n\nconst Home = () => {\n    const [stats, setStats] = useState({ cpuUsage: '0', memoryUsage: '0' });\n\n    useEffect(() => {\n        // Función para obtener las estadísticas del sistema\n        const fetchSystemStats = async () => {\n            try {\n                const response = await fetch('/api/system/stats');\n                const data = await response.json();\n                setStats(data);\n            } catch (error) {\n                console.error('Error fetching system stats:', error);\n            }\n        };\n\n        fetchSystemStats();\n        // Actualizar cada 10 segundos\n        const interval = setInterval(fetchSystemStats, 1000);\n\n        return () => clearInterval(interval); // Limpiar intervalo al desmontar\n    }, []);\n\n    // Datos para la gráfica de uso de RAM\n    const memoryUsageData = {\n        labels: ['Uso de RAM', 'Libre'],\n        datasets: [\n            {\n                data: [stats.memoryUsage, 100 - stats.memoryUsage],\n                backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(200, 200, 200, 0.2)'],\n                borderColor: ['rgba(255, 99, 132, 1)', 'rgba(200, 200, 200, 1)'],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    // Datos para la gráfica de uso de CPU\n    const cpuUsageData = {\n        labels: ['Uso de CPU', 'Libre'],\n        datasets: [\n            {\n                data: [stats.cpuUsage, 100 - stats.cpuUsage],\n                backgroundColor: ['rgba(75, 192, 192, 0.2)', 'rgba(200, 200, 200, 0.2)'],\n                borderColor: ['rgba(75, 192, 192, 1)', 'rgba(200, 200, 200, 1)'],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    return (\n        <div>\n            <h1>Bienvenido al Gestor de Servidores</h1>\n            <p>Administra tus servidores de juegos desde una interfaz web.</p>\n            <p>Selecciona un juego en el menú para comenzar.</p>\n\n            <div>\n                <h2>Estadísticas del Sistema</h2>\n                <div>\n                    <h3>Uso de RAM</h3>\n                    <Doughnut data={memoryUsageData} />\n                </div>\n                <div>\n                    <h3>Uso de CPU</h3>\n                    <Doughnut data={cpuUsageData} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}