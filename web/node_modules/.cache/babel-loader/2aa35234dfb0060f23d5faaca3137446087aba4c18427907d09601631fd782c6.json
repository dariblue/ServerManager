{"ast":null,"code":"var _jsxFileName = \"/home/d4rx/Desktop/ServerManager/web/src/components/MinecraftConsole.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// const MinecraftConsole = () => {\n//   const [socket, setSocket] = useState(null);\n//   const [message, setMessage] = useState('');\n//   const [consoleOutput, setConsoleOutput] = useState('');\n\n//   useEffect(() => {\n//     const ws = new WebSocket('ws://localhost:3002'); // Asegúrate de usar el puerto correcto\n//     ws.onopen = () => {\n//       console.log('Conectado al servidor WebSocket');\n//       setSocket(ws);\n//     };\n\n//     ws.onmessage = (event) => {\n//       setConsoleOutput((prev) => prev + event.data);\n//     };\n\n//     ws.onclose = () => {\n//       console.log('Desconectado del servidor WebSocket');\n//       setSocket(null);\n//     };\n\n//     return () => {\n//       if (ws) {\n//         ws.close();\n//       }\n//     };\n//   }, []);\n\n//   const sendCommand = () => {\n//     if (socket) {\n//       socket.send(message);\n//       setMessage('');\n//     } else {\n//       console.error('WebSocket no está conectado');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <textarea value={consoleOutput} readOnly rows=\"30\" cols=\"120\" />\n//       <br />\n//       <input\n//         type=\"text\"\n//         value={message}\n//         onChange={(e) => setMessage(e.target.value)}\n//         placeholder=\"Introduce comando\"\n//       />\n//       <button onClick={sendCommand}>Enviar Comando</button>\n//     </div>\n//   );\n// };\n\n// export default MinecraftConsole;\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\n// Configura la conexión a tu servidor WebSocket\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nconst MinecraftConsole = () => {\n  _s();\n  const [command, setCommand] = useState('');\n  const [response, setResponse] = useState('');\n  useEffect(() => {\n    // Maneja la respuesta del servidor\n    socket.on('response', data => {\n      setResponse(data);\n    });\n\n    // Limpia el socket al desmontar el componente\n    return () => {\n      socket.off('response');\n    };\n  }, []);\n  const sendCommand = () => {\n    socket.emit('command', command);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: response,\n      readOnly: true,\n      rows: \"10\",\n      cols: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: command,\n      onChange: e => setCommand(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendCommand,\n      children: \"Enviar Comando\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(MinecraftConsole, \"gpL8h+Ifvdc1JbvPlR0lyW0BkWY=\");\n_c = MinecraftConsole;\nexport default MinecraftConsole;\nvar _c;\n$RefreshReg$(_c, \"MinecraftConsole\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","MinecraftConsole","_s","command","setCommand","response","setResponse","on","data","off","sendCommand","emit","children","value","readOnly","rows","cols","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/d4rx/Desktop/ServerManager/web/src/components/MinecraftConsole.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// const MinecraftConsole = () => {\n//   const [socket, setSocket] = useState(null);\n//   const [message, setMessage] = useState('');\n//   const [consoleOutput, setConsoleOutput] = useState('');\n\n//   useEffect(() => {\n//     const ws = new WebSocket('ws://localhost:3002'); // Asegúrate de usar el puerto correcto\n//     ws.onopen = () => {\n//       console.log('Conectado al servidor WebSocket');\n//       setSocket(ws);\n//     };\n\n//     ws.onmessage = (event) => {\n//       setConsoleOutput((prev) => prev + event.data);\n//     };\n\n//     ws.onclose = () => {\n//       console.log('Desconectado del servidor WebSocket');\n//       setSocket(null);\n//     };\n\n//     return () => {\n//       if (ws) {\n//         ws.close();\n//       }\n//     };\n//   }, []);\n\n  \n//   const sendCommand = () => {\n//     if (socket) {\n//       socket.send(message);\n//       setMessage('');\n//     } else {\n//       console.error('WebSocket no está conectado');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <textarea value={consoleOutput} readOnly rows=\"30\" cols=\"120\" />\n//       <br />\n//       <input\n//         type=\"text\"\n//         value={message}\n//         onChange={(e) => setMessage(e.target.value)}\n//         placeholder=\"Introduce comando\"\n//       />\n//       <button onClick={sendCommand}>Enviar Comando</button>\n//     </div>\n//   );\n// };\n\n// export default MinecraftConsole;\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\n// Configura la conexión a tu servidor WebSocket\nconst socket = io('http://localhost:3001');\n\nconst MinecraftConsole = () => {\n  const [command, setCommand] = useState('');\n  const [response, setResponse] = useState('');\n\n  useEffect(() => {\n    // Maneja la respuesta del servidor\n    socket.on('response', (data) => {\n      setResponse(data);\n    });\n\n    // Limpia el socket al desmontar el componente\n    return () => {\n      socket.off('response');\n    };\n  }, []);\n\n  const sendCommand = () => {\n    socket.emit('command', command);\n  };\n\n  return (\n    <div>\n      <textarea\n        value={response}\n        readOnly\n        rows=\"10\"\n        cols=\"50\"\n      />\n      <br />\n      <input\n        type=\"text\"\n        value={command}\n        onChange={(e) => setCommand(e.target.value)}\n      />\n      <button onClick={sendCommand}>Enviar Comando</button>\n    </div>\n  );\n};\n\nexport default MinecraftConsole;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAI,MAAM,CAACO,EAAE,CAAC,UAAU,EAAGC,IAAI,IAAK;MAC9BF,WAAW,CAACE,IAAI,CAAC;IACnB,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXR,MAAM,CAACS,GAAG,CAAC,UAAU,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBV,MAAM,CAACW,IAAI,CAAC,SAAS,EAAER,OAAO,CAAC;EACjC,CAAC;EAED,oBACEJ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MACEc,KAAK,EAAER,QAAS;MAChBS,QAAQ;MACRC,IAAI,EAAC,IAAI;MACTC,IAAI,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACFrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXR,KAAK,EAAEV,OAAQ;MACfmB,QAAQ,EAAGC,CAAC,IAAKnB,UAAU,CAACmB,CAAC,CAACC,MAAM,CAACX,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFrB,OAAA;MAAQ0B,OAAO,EAAEf,WAAY;MAAAE,QAAA,EAAC;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAAClB,EAAA,CArCID,gBAAgB;AAAAyB,EAAA,GAAhBzB,gBAAgB;AAuCtB,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}